if (x + 1> 0 && x + 1< vars->width * TILE_SIZE && y > 0
			&& y < vars->height * TILE_SIZE
			&& vars->map[((int)y / TILE_SIZE)][((int)x + 1/ TILE_SIZE)] == '1')
				x = x - 2;
			else if (x - 1> 0 && x - 1< vars->width * TILE_SIZE && y > 0
			&& y < vars->height * TILE_SIZE
			&& vars->map[((int)y / TILE_SIZE)][((int)x - 1/ TILE_SIZE)] == '1')
				x = x + 2;
			else if (x > 0 && x < vars->width * TILE_SIZE && y + 1> 0
			&& y + 1< vars->height * TILE_SIZE
			&& vars->map[((int)(y + 1) / TILE_SIZE)][((int)x / TILE_SIZE)] == '1')
				y = y - 2;
			else if (x > 0 && x < vars->width * TILE_SIZE && y - 1> 0
			&& y - 1< vars->height * TILE_SIZE
			&& vars->map[((int)(y - 5) / TILE_SIZE)][((int)x / TILE_SIZE)] == '1')
				y = y + 2;
			printf("%f---%f\n",x,y);




//
	// while(i <= ((vars->height * TILE_SIZE) - wallbot))
	// {
	// 	my_mlx_pixel_put(&vars->img, (vars->width * TILE_SIZE) - (j + 1), i, 0xFF0000);
	// 	i++;
	// }
	//i = wallbot;
	//printf("%d--%d\n",i,vars->height * TILE_SIZE);
	//while(i < vars->height * TILE_SIZE)
	//{
	//	my_mlx_pixel_put(&vars->img, (vars->width * TILE_SIZE) - (j + 1), i, 0xFF0000);
	//	i++;
	//}